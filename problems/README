The book is arranged in a tree structure of chapters, sections, and problem groups.
Each node in the tree has a configuration file called this.config in its directory.
The configuration file is in JSON format, with comments allowed. Newlines are not
removed, and multiline strings are not allowed.

In most cases, it's OK to associate all the problem groups with the final section
of the chapter.

Explanatory text is in files called text.tex, at the section level. If you want
a remark above a problem group (such as general instructions that apply to all
the problems in the group), you can put the text in a text.tex file at the
problem-group level.

Figures belonging to problems are automagically found and included based on
file-naming conventions. If the problem is in hw/foo.tex, then we look for
figures in figs called foo.*, hw-foo.*, or eg-foo.*.

Assigning difficulty levels to problems:
  % meta {"stars":1} // super hard problem
Figures in explanatory text:
  % fig {"name":"greyhound","caption":"The racing greyhound's velocity vector is
  % in the direction of its motion, i.e., tangent to its curved path."}
In the above syntax, the active latex comments contain a keyword followed by a
JSON string. The JSON string can extend over multiple lines; input will be read
until a complete and syntactically valid JSON string is built up. Newlines are
eliminated, so in the example above, with a multiline string, the space after
the % on the second line is significant. Javascript-style comments are allowed,
but watch out when combining multiline blocks with //-style comments, because the 
newlines  are removed before the comments are removed. It may be safer to use
/*...*/ comments.

special casing for problems book versus other books
  m4_ifelse(__problems,1,[:foo:],[:bar:])

format of config files:
  this.config for the whole book
    {
      "book":"problems",
      "title":"Problems in Introductory Physics",
      "url":"http://www.lightandmatter.com/problems_calc/",
      "order":["geometric-optics","wave-optics"] ... names of subdirs for chapters
    }
  this.config for a chapter
    {
      "title":"Geometric optics",
      "files":"share/optics", ... text in optics/hw, figures in optics/figs
      "order":["ray-model",...]
    }
  this.config for a section
    {
      "title":"Image location",
      "order":{ ... is a hash in this case, not an array
        "a":"ray-diagrams", ... subdirs for problem groups
        "d":"image-location"
      }
    }
  for subsections, just embed \subsection{} tags in text.tex
  this.config for a problem group
    {
      "order":["hear-your-own-whisper",...]
        ... 
    }

more about figures
  wide figures
    These are hard to place appropriate in 2-column text. See
    http://tex.stackexchange.com/questions/314257/time-travel-in-latex
    and https://github.com/bcrowell/timetravel .
  belonging to problems
    sometimes, e.g., in hw-colliding-balls, a figure that is OK at wide in LM is
           much too big as wide (both columns) in problems book; in this situation,
           put the figure in problems/override_fig_widths as medium
  in expository text
    Default detection of width should almost always be right, but if necessary
            it can be overrridden by adding, e.g., "width":"medium".
    Default detection of width won't work for wide figures that only appear in problems
            book, so for those, edit data/fig_widths_by_hand.
    Can prevent timetravel by using "timetravel":0
  sizes
    automatically known based on data/fig_widths and data/fig_widths_by_hand
    can be narrow (52 mm), medium (1 column, used only in problems book),
           wide, or fullpage
  hw figures with unusual captions, e.g., figures shared by two problems
    hand-edit data/fig_exceptional_captions; the figure should have a name derived
           in the standard way from the names of one of the two problems
  hw figures to be duplicated on different pages
    edit data/fig_exceptional_naming

more about problems
  We filter out any eruby, such as <% hw_solution %>.
  explicit metadata
    active latex comments with json in them
      % meta {"stars":3}
      difficulty, 0 to 3 stars; default is 0 stars
    uses calculus
      % meta {"calculus":1}
      0 or 1, default is 0; this can't be inferred automatically, since, e.g.,
            I don't use begin_hw(...{'calc'=>true}) in SN; is not needed for the initial
            version of the project, but we will want to have it at some point
  metadata inferred partially or completely from other sources of into
    what topics assumed -- inferred by default based on what directory it's in
    solution, 0 or 1 -- determine it from problems.csv, whose data ultimately comes
             from the fact that there is a <% hw_solution %> in the .tex file;
             for problems that are only in the problems book, not one of the textbooks,
             do % meta {"solution":1}, and put solution in physics/share/answers
  not needed
    answer check -- infer this from the presence of an \answercheck macro
